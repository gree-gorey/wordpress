apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "app.name" . }}
  labels:
    app: {{ template "app.name" . }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "app.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "app.name" . }}
        release: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
      - name: {{ template "app.name" . }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: fpm
          containerPort: 9000
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz.php
            port: 80
        readinessProbe:
          httpGet:
            path: /healthz.php
            port: 80
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        env:
        - name: WORDPRESS_DEBUG
          value: "1"
        - name: WORDPRESS_DB_HOST
          value: {{ .Values.db.host }}
        - name: WORDPRESS_DB_USER
          value: {{ .Values.db.user }}
        - name: WORDPRESS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "app.name" . }}
              key: dbPassword
        - name: WORDPRESS_DB_NAME
          value: {{ .Values.db.name }}
        - name: WORDPRESS_TABLE_PREFIX
          value: {{ .Values.db.tablePrefix }}
        volumeMounts:
        - name: shared
          mountPath: /var/www/html
        # TODO
        # - name: nfs
        #   mountPath: /var/www/html
        lifecycle:
          postStart:
            exec:
              command:
              - "/bin/sh"
              - "-c"
              - "cp -r /wp-files/* /var/www/html/"
      - name: nginx
        image: "{{ .Values.nginxImage.repository }}:{{ .Values.nginxImage.tag }}"
        imagePullPolicy: {{ .Values.nginxImage.pullPolicy }}
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: 80
        readinessProbe:
          tcpSocket:
            port: 80
        resources:
          {{- toYaml .Values.nginxResources | nindent 10 }}
        volumeMounts:
        - name: shared
          mountPath: /var/www/html
        - name: config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
      volumes:
      # TODO
      # - name: nfs
      #   persistentVolumeClaim:
      #     claimName: {{ template "app.name" . }}
      - name: config
        configMap:
          name: {{ template "app.name" . }}
      - name: shared
        emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
