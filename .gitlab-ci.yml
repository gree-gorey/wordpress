image: greegorey/ci:1.0.0

stages:
  - build
  - helm lint
  - apply namespace
  - deploy nfs
  - deploy db
  - deploy wp

build ci image:
  stage: build
  script:
    - docker build
    - docker push

build wp image:
  stage: build
  script:
    - docker build
    - docker push

helm lint:
  stage: helm lint
  script:
    - helm lint charts/*

# we use here secret Gitlab variables:
# - KUBECONFIG_B64
.k8s: &k8s
  before_script:
    - echo $KUBECONFIG_B64 | base64 --decode > ~/.kube/config

apply namespace:
  stage: apply namespace
  <<: *k8s
  script:
    - kubectl apply
      --filename namespace.yaml

# TODO:
# - kubectl rollout status --namespace kube-system statefulset/nfs --watch
deploy nfs:
  stage: deploy nfs
  <<: *k8s
  script:
    - helm template
      --name nfs
      --namespace kube-system
      charts/nfs-server-provisioner >
      templated.yaml
    - kubectl apply
      --namespace kube-system
      --filename templated.yaml

# we use here secret Gitlab variables:
# - ROOT_PASSWORD
# - REPLICATION_PASSWORD
#
# TODO:
# - kubectl rollout status --namespace wp statefulset/mariadb-master --watch
# - kubectl rollout status --namespace wp statefulset/mariadb-slave --watch
deploy db:
  stage: deploy db
  <<: *k8s
  script:
    - helm template
      --name mariadb
      --namespace wp
      --set mariadb.rootUser.password=$ROOT_PASSWORD
      --set mariadb.replication.password=$REPLICATION_PASSWORD
      charts/mariadb >
      templated.yaml
    - kubectl apply
      --namespace wp
      --filename templated.yaml

deploy wp:
  stage: deploy wp
  <<: *k8s
  script:
    - helm template
      --name wordpress
      --namespace wp
      charts/wordpress >
      templated.yaml
    - kubectl apply
      --namespace wp
      --filename templated.yaml
